// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_net_po_schedule_management_server.DbConfig;

namespace asp_net_po_schedule_management_server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220516191033_AddRoomsAndRoom")]
    partial class AddRoomsAndRoom
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Cathedral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cath-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cath-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("cathedrals");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dept-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dept-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("EmailPassword")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email-password");

                    b.Property<bool>("FirstAccess")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("first-access");

                    b.Property<bool>("HasPicture")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("has-picture");

                    b.Property<bool>("IfRemovable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("if-removable");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nationality");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("password");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role-key");

                    b.Property<string>("Shortcut")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("shortcut");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("surname");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("person");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("person-key");

                    b.Property<string>("TokenValue")
                        .HasColumnType("longtext")
                        .HasColumnName("token-value");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("jwt-tokens");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ResetPasswordOtp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user-email");

                    b.Property<bool>("IfUsed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("if-used");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user-otp");

                    b.Property<DateTime>("OtpExpired")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("otp-expired");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("person-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("reset-password-otp");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.RoomType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("room-type-alias");

                    b.Property<string>("Color")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("room-type-color");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("room-type-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("room-types");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("study-room-capacity");

                    b.Property<long>("CathedralId")
                        .HasColumnType("bigint")
                        .HasColumnName("cathedral-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("department-key");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("study-room-desc");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("study-room-name");

                    b.Property<long>("RoomTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("room-type-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("CathedralId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("study-rooms");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudySpecialization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("study-spec-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("study-spec-name");

                    b.Property<long>("StudyTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("study-type-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("study-specializations");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("study-type-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("study-type-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("study-types");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Cathedral", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Person", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.RefreshToken", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ResetPasswordOtp", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyRoom", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Cathedral", "Cathedral")
                        .WithMany()
                        .HasForeignKey("CathedralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cathedral");

                    b.Navigation("Department");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudySpecialization", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudyType", "StudyType")
                        .WithMany()
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("StudyType");
                });
#pragma warning restore 612, 618
        }
    }
}
