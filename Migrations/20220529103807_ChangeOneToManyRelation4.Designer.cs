// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_net_po_schedule_management_server.DbConfig;

namespace asp_net_po_schedule_management_server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220529103807_ChangeOneToManyRelation4")]
    partial class ChangeOneToManyRelation4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Cathedral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cath-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<bool>("IfRemovable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("if-removable");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cath-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("cathedrals");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dept-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<bool>("IfRemovable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("if-removable");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dept-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<long?>("CathedralId")
                        .HasColumnType("bigint")
                        .HasColumnName("cath-key");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("EmailPassword")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("email-password");

                    b.Property<bool>("FirstAccess")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("first-access");

                    b.Property<bool>("HasPicture")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("has-picture");

                    b.Property<bool>("IfRemovable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("if-removable");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nationality");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("password");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role-key");

                    b.Property<string>("Shortcut")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("shortcut");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("surname");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("CathedralId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("person");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("person-key");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("token-value");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("jwt-tokens");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ResetPasswordOtp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user-email");

                    b.Property<bool>("IfUsed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("if-used");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("user-otp");

                    b.Property<DateTime>("OtpExpired")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("otp-expired");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("person-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("reset-password-otp");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.RoomType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("room-type-alias");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("room-type-color");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("room-type-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("room-types");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ScheduleSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("end-time");

                    b.Property<long>("ScheduleSubjectTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("subject-type-key");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("start-time");

                    b.Property<long>("StudyGroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group-key");

                    b.Property<long>("StudySubjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("subject-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.Property<long>("WeekdayId")
                        .HasColumnType("bigint")
                        .HasColumnName("weekday-key");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleSubjectTypeId");

                    b.HasIndex("StudyGroupId");

                    b.HasIndex("StudySubjectId");

                    b.HasIndex("WeekdayId");

                    b.ToTable("schedule-subjects");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ScheduleSubjectType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("schedule-type-alias");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("schedule-type-color");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("schedule-type-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("schedule-subject-types");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Semester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sem-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sem-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("semesters");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyDegree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("degree-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("degree-level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("degree-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("study-degrees");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("group-name");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint")
                        .HasColumnName("sem-key");

                    b.Property<long>("StudySpecializationId")
                        .HasColumnType("bigint")
                        .HasColumnName("study-spec-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudySpecializationId");

                    b.ToTable("study-groups");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("study-room-capacity");

                    b.Property<long>("CathedralId")
                        .HasColumnType("bigint")
                        .HasColumnName("cathedral-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("department-key");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("study-room-desc");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("study-room-name");

                    b.Property<long>("RoomTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("room-type-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("CathedralId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("study-rooms");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudySpecialization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("study-spec-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("study-spec-name");

                    b.Property<long>("StudyDegreeId")
                        .HasColumnType("bigint")
                        .HasColumnName("degree-key");

                    b.Property<long>("StudyTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("study-type-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StudyDegreeId");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("study-specializations");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudySubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("study-spec-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("dept-key");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("study-spec-name");

                    b.Property<long>("StudySpecializationId")
                        .HasColumnType("bigint")
                        .HasColumnName("study-spec-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StudySpecializationId");

                    b.ToTable("study-subjects");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("study-type-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("study-type-name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("study-types");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.WeekScheduleOccur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<DateTime>("OccurDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("week-occur");

                    b.Property<long>("ScheduleSubjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("schedule-subject-key");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.Property<byte>("WeekNumber")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("week-identifier");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("week-year");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleSubjectId");

                    b.ToTable("week-schedule-occur");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Weekday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("primary-key");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("day-alias");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created-date");

                    b.Property<string>("DictionaryHash")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dictionary-hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("day-name");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("day-identifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated-date");

                    b.HasKey("Id");

                    b.ToTable("weekdays");
                });

            modelBuilder.Entity("schedule-rooms-binding", b =>
                {
                    b.Property<long>("room-key")
                        .HasColumnType("bigint");

                    b.Property<long>("schedule-subject-key")
                        .HasColumnType("bigint");

                    b.HasKey("room-key", "schedule-subject-key");

                    b.HasIndex("schedule-subject-key");

                    b.ToTable("schedule-rooms-binding");
                });

            modelBuilder.Entity("schedule-teachers-binding", b =>
                {
                    b.Property<long>("schedule-subject-key")
                        .HasColumnType("bigint");

                    b.Property<long>("teacher-key")
                        .HasColumnType("bigint");

                    b.HasKey("schedule-subject-key", "teacher-key");

                    b.HasIndex("teacher-key");

                    b.ToTable("schedule-teachers-binding");
                });

            modelBuilder.Entity("students-specs-binding", b =>
                {
                    b.Property<long>("student-key")
                        .HasColumnType("bigint");

                    b.Property<long>("study-spec-key")
                        .HasColumnType("bigint");

                    b.HasKey("student-key", "study-spec-key");

                    b.HasIndex("study-spec-key");

                    b.ToTable("students-specs-binding");
                });

            modelBuilder.Entity("users-subjects-binding", b =>
                {
                    b.Property<long>("study-subject-key")
                        .HasColumnType("bigint");

                    b.Property<long>("user-key")
                        .HasColumnType("bigint");

                    b.HasKey("study-subject-key", "user-key");

                    b.HasIndex("user-key");

                    b.ToTable("users-subjects-binding");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Cathedral", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.Person", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Cathedral", "Cathedral")
                        .WithMany()
                        .HasForeignKey("CathedralId");

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cathedral");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.RefreshToken", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ResetPasswordOtp", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ScheduleSubject", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.ScheduleSubjectType", "ScheduleSubjectType")
                        .WithMany()
                        .HasForeignKey("ScheduleSubjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudySubject", "StudySubject")
                        .WithMany()
                        .HasForeignKey("StudySubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Weekday", "Weekday")
                        .WithMany()
                        .HasForeignKey("WeekdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduleSubjectType");

                    b.Navigation("StudyGroup");

                    b.Navigation("StudySubject");

                    b.Navigation("Weekday");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyGroup", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudySpecialization", "StudySpecialization")
                        .WithMany()
                        .HasForeignKey("StudySpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Semester");

                    b.Navigation("StudySpecialization");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudyRoom", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Cathedral", "Cathedral")
                        .WithMany()
                        .HasForeignKey("CathedralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cathedral");

                    b.Navigation("Department");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudySpecialization", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudyDegree", "StudyDegree")
                        .WithMany()
                        .HasForeignKey("StudyDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudyType", "StudyType")
                        .WithMany()
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("StudyDegree");

                    b.Navigation("StudyType");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.StudySubject", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudySpecialization", "StudySpecialization")
                        .WithMany()
                        .HasForeignKey("StudySpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("StudySpecialization");
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.WeekScheduleOccur", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.ScheduleSubject", "ScheduleSubject")
                        .WithMany("WeekScheduleOccurs")
                        .HasForeignKey("ScheduleSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduleSubject");
                });

            modelBuilder.Entity("schedule-rooms-binding", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudyRoom", null)
                        .WithMany()
                        .HasForeignKey("room-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.ScheduleSubject", null)
                        .WithMany()
                        .HasForeignKey("schedule-subject-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("schedule-teachers-binding", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.ScheduleSubject", null)
                        .WithMany()
                        .HasForeignKey("schedule-subject-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("teacher-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("students-specs-binding", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("student-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudySpecialization", null)
                        .WithMany()
                        .HasForeignKey("study-spec-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("users-subjects-binding", b =>
                {
                    b.HasOne("asp_net_po_schedule_management_server.Entities.StudySubject", null)
                        .WithMany()
                        .HasForeignKey("study-subject-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_net_po_schedule_management_server.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("user-key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("asp_net_po_schedule_management_server.Entities.ScheduleSubject", b =>
                {
                    b.Navigation("WeekScheduleOccurs");
                });
#pragma warning restore 612, 618
        }
    }
}
